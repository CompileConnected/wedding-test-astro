---
import Layout from "../layouts/Layout.astro";
import BottomItem from "../components/BottomItem.astro";

import "../styles/main.css";
---

<Layout title="Landing">
  <main class="mx-auto">
    <div
      id="home"
      class="section flex flex-col flex-wrap justify-center items-center h-screen"
    >
      <div class="text-4xl sm:text-6xl font-bold text-center">Page</div>
      <div class="text-base sm:text-xl font-bold p-0 text-center">Home</div>
    </div>

  
    <div
      id="profile"
      class="section flex flex-col flex-wrap justify-center items-center h-screen"
    >
      <div class="text-4xl sm:text-6xl font-bold text-center">Page</div>
      <div class="text-base sm:text-xl font-bold p-0 text-center">Profile</div>
    </div>
  
    <div
      id="story"
      class="section flex flex-col flex-wrap justify-center items-center h-screen"
    >
      <div class="text-4xl sm:text-6xl font-bold text-center">Page</div>
      <div class="text-base sm:text-xl font-bold p-0 text-center">Story</div>
    </div>

    <div
    id="wallet"
    class="section flex flex-col flex-wrap justify-center items-center h-screen"
  >
    <div class="text-4xl sm:text-6xl font-bold text-center">Page</div>
    <div class="text-base sm:text-xl font-bold p-0 text-center">Wallet</div>
  </div>


    <nav
      class="fixed z-50 bottom-4 w-full max-w-lg -translate-x-1/2 left-1/2 bg-gray-800 text-white flex justify-around py-4"
    >
      <BottomItem title="Home" navigateTo="home" iconName="mdi:home" />
      <BottomItem title="Profile" navigateTo="profile" iconName="mdi:account" />
      <BottomItem
        title="Story"
        navigateTo="story"
        iconName="ic:baseline-edit"
      />
      <BottomItem title="Gallery" navigateTo="gallery" iconName="solar:gallery-linear" />

      <BottomItem title="Wallet" navigateTo="wallet" iconName="uil:wallet" />

      <BottomItem title="Test" navigateTo="test" iconName="mdi:power" />
    </nav>
  </main>
</Layout>
<script>
  function smoothScrollTo(targetId) {
    const target = document.getElementById(targetId);
    if (target) {
      // Calculate the distance between the top of the document and the target element
      const targetOffsetTop = target.getBoundingClientRect().top;

      // Use the 'scrollTo' function with behavior 'smooth' to achieve smooth scrolling
      window.scrollTo({
        top: targetOffsetTop + window.pageYOffset, // Add current scroll position to the target offset
        behavior: "smooth",
      });
    }
  }

  document.addEventListener("DOMContentLoaded", function() {
    const sections = document.querySelectorAll(".section");
    const navigationItems = document.querySelectorAll(".nav-item")
    
    function setBottomNavigationClick() {
      navigationItems.forEach((x) => {
        x.addEventListener("click", (e) => {
          smoothScrollTo(x.id)
        })
      })
    }

    function getActiveSection() {
      let currentSection = sections[0];
      let minDistance = Math.abs(currentSection.getBoundingClientRect().top);

      sections.forEach((section) => {
        const distance = Math.abs(section.getBoundingClientRect().top);
        if (distance < minDistance) {
          minDistance = distance;
          currentSection = section;
        }
      });

      return currentSection;
    }

    function setActionNavItem() {
       let currentSection = getActiveSection()
       navigationItems.forEach((nav) => {
          const icon = nav.querySelector('.nav-item-icon');
          const text = nav.querySelector('.nav-item-text');
      
          if (nav.id === currentSection.id) {
            icon.classList.remove('text-gray-500', 'group-hover:text-blue-600')
            text.classList.remove('group-hover:text-blue-600')
            icon.classList.add('text-blue-600')
            text.classList.add('text-blue-600')
          } else {
            icon.classList.remove('text-blue-600')
            text.classList.remove('text-blue-600')
            icon.classList.add('text-gray-500', 'group-hover:text-blue-600')
            text.classList.add('group-hover:text-blue-600')
          }
       }) 
    }
      // Debounce function
    function debounce(func, delay) {
      let timer;
      return function(...args) {
        clearTimeout(timer);
        timer = setTimeout(() => func.apply(this, args), delay);
      };
    }

    const debouncedSetActiveNavItem = debounce(setActionNavItem, 100);
    
    setActionNavItem();
    setBottomNavigationClick();

    document.addEventListener("scroll", debouncedSetActiveNavItem);

  })

</script>
<style>
  .section {

  }

  main {
    background-image: var(--accent-gradient);
  }
</style>
